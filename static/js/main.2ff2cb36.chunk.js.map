{"version":3,"sources":["components/MedalList.js","components/MedalCount.js","components/MedalListItem.js","App.js","reportWebVitals.js","index.js"],"names":["MedalCount","className","this","props","count","Component","MedalListItem","initial","localStorage","getItem","name","split","join","state","parseInt","num","setItem","setState","store","set","ListItem","ListItemText","fontSize","onClick","increment","decrement","countries","items","c","length","push","MedalList","List","component","subheader","ListSubheader","id","Divider","App","Container","maxWidth","clear","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAgBA,I,kKCbqBA,E,4JACjB,WACI,OACI,qBAAKC,UAAU,cAAf,SAA6B,4BAAIC,KAAKC,MAAMC,c,GAHhBC,a,kCCInBC,E,kDACjB,WAAYH,GAAQ,IAAD,sBACf,cAAMA,GAEN,IAAII,EAAUC,aAAaC,QAAQN,EAAMO,KAAKC,MAAM,KAAKC,KAAK,MAH/C,OAIVL,IAAWA,EAAUJ,EAAMC,OAEhC,EAAKS,MAAQ,CAAET,MAAOU,SAASP,GAAUG,KAAMP,EAAMO,MANtC,E,yCASnB,SAAMK,GAAOP,aAAaQ,QAAQd,KAAKW,MAAMH,KAAKC,MAAM,KAAKC,KAAK,KAAMG,K,iBACxE,SAAIA,GAAOb,KAAKe,SAAS,CAAEb,MAAOW,IAAQb,KAAKgB,MAAMH,K,uBAErD,WAAcb,KAAKiB,IAAIjB,KAAKW,MAAMT,MAAQ,K,uBAC1C,WAAuC,IAArBF,KAAKW,MAAMT,OAAwBF,KAAKiB,IAAIjB,KAAKW,MAAMT,MAAQ,K,oBAEjF,WAAU,IAAD,OACL,OACI,eAACgB,EAAA,EAAD,CAAUnB,UAAU,kBAApB,UACI,cAAC,EAAD,CAAYG,MAAOF,KAAKW,MAAMT,QAC9B,cAACiB,EAAA,EAAD,UAAenB,KAAKW,MAAMH,OAE1B,cAAC,IAAD,CAAeY,SAAS,QAAQC,QAAS,kBAAM,EAAKC,eACpD,cAAC,IAAD,CAAkBF,SAAS,QAAQC,QAAS,kBAAM,EAAKE,sB,GAvB5BpB,aFFvCqB,EAAY,CACZ,gBACA,QACA,SACA,UACA,SACA,SAGAC,EAAQ,GAEHC,EAAI,EAAGA,EAAIF,EAAUG,OAAQD,IAAOD,EAAMG,KAAK,cAAC,EAAD,CAAe1B,MAAM,IAAIM,KAAMgB,EAAUE,IAASA,I,IAErFG,E,4JACjB,WACI,OACI,eAACC,EAAA,EAAD,CAAM/B,UAAU,OACZgC,UAAU,MACV,kBAAgB,wBAChBC,UACI,cAACC,EAAA,EAAD,CAAeF,UAAU,MAAMG,GAAG,wBAAlC,8BAJR,UASI,cAACC,EAAA,EAAD,IACCV,S,GAbsBtB,aGJxBiC,MATf,WACE,OACE,eAACC,EAAA,EAAD,CAAWtC,UAAU,YAAYuC,SAAS,KAA1C,UACI,cAAC,EAAD,IACA,wBAAQvC,UAAU,YAAYsB,QAAS,WAAQf,aAAaiC,QAASC,OAAOC,SAASC,UAArF,uBCGOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2ff2cb36.chunk.js","sourcesContent":["import './../css/MedalList.css';\r\nimport { List, ListSubheader, Divider } from '@material-ui/core';\r\nimport MedalListItem from './MedalListItem';\r\nimport { Component } from 'react';\r\n\r\nlet countries = [\r\n    'United States',\r\n    'China',\r\n    'Russia',\r\n    'Germany',\r\n    'Brazil',\r\n    'Japan'\r\n]\r\n\r\nlet items = [];\r\n\r\nfor (let c = 0; c < countries.length; c++) { items.push(<MedalListItem count=\"0\" name={countries[c]} key={c} />) }\r\n\r\nexport default class MedalList extends Component {\r\n    render() {\r\n        return (\r\n            <List className=\"list\"\r\n                component=\"nav\"\r\n                aria-labelledby=\"nested-list-subheader\"\r\n                subheader={\r\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                        Gold Medal Count\r\n                    </ListSubheader>\r\n                }\r\n            >\r\n                <Divider></Divider>\r\n                {items}\r\n            </List>\r\n        );\r\n    }\r\n}\r\n","import './../css/MedalCount.css';\r\nimport { Component } from 'react';\r\n\r\nexport default class MedalCount extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"medal-count\"><p>{this.props.count}</p></div>\r\n        )\r\n    }\r\n}","import './../css/MedalListItem.css';\r\nimport { ListItem, ListItemText } from '@material-ui/core'\r\nimport MedalCount from './MedalCount';\r\nimport { Component } from 'react';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\n\r\nexport default class MedalListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let initial = localStorage.getItem(props.name.split(' ').join('-'));\r\n        if (!initial) { initial = props.count }\r\n\r\n        this.state = { count: parseInt(initial), name: props.name }\r\n    }\r\n\r\n    store(num) { localStorage.setItem(this.state.name.split(' ').join('-'), num) }\r\n    set(num) { this.setState({ count: num }); this.store(num) }\r\n\r\n    increment() { this.set(this.state.count + 1) }\r\n    decrement() { if (this.state.count === 0) { return } this.set(this.state.count - 1) }\r\n\r\n    render() {\r\n        return (\r\n            <ListItem className=\"medal-list-item\">\r\n                <MedalCount count={this.state.count} />\r\n                <ListItemText>{this.state.name}</ListItemText>\r\n                \r\n                <AddCircleIcon fontSize=\"large\" onClick={() => this.increment() } />\r\n                <RemoveCircleIcon fontSize=\"large\" onClick={() => this.decrement() } />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n","import './App.css';\n\nimport Container from '@material-ui/core/Container';\nimport MedalList from './components/MedalList';\n\nfunction App() {\n  return (\n    <Container className=\"container\" maxWidth=\"sm\">\n        <MedalList />\n        <button className=\"reset-btn\" onClick={() => { localStorage.clear(); window.location.reload() }}>Reset</button>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}